#!/usr/bin/env node

var Recursive = require('../lib/pascals-triangle/pascals-triangle-recursive'),
    Memoize = require('../lib/pascals-triangle/pascals-triangle-memoize');

var rowNumber = process.argv[2], method = process.argv[3];
var recursive = new Recursive(), memoize = new Memoize();
console.log(method, typeof method);

if(process.argv.length < 3 || process.argv.length > 4) {
	console.log('Must contain a row number and optionally a solve method');
	return;
}

//if(typeof rowNumber != 'number') {
//	console.log('N must be a number');
//	return;
//}

if(process.argv.length === 4 && (method != 'recursive' || method != 'memoize')) {
	console.log('If solve method is provided, must be supported.');
	return;
}

if(process.argv.length === 3 || method === 'recursive') {
	var result = recursive.calculate(rowNumber);
}
else {
	var result = memoize.calculate(method)
}

//memoize.calculate(argv[0]);
console.log('Row ' + rowNumber + ' = ' + result);
